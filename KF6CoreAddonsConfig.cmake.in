@PACKAGE_INIT@

include(CMakeFindDependencyMacro)
find_dependency(Qt6Core @REQUIRED_QT_VERSION@)

if(NOT @BUILD_SHARED_LIBS@)
    if(NOT WIN32)
        find_dependency(Threads)
    endif()

    # Should be if(Inotify_FOUND) here, but for some reason this doesn't work when building statically
    # due to ECM's FindInotify.cmake misbehavior â€” see https://bugs.kde.org/show_bug.cgi?id=460656 for details.
    # This workaround stops CMake from failing on Linux by relying on the fact that Inotify is built into
    # kernel there, so no additional linking is required, resulting in an empty Inotify_LIBRARIES var.
    # The issue (most likely) persists on BSD, though, where Inotify is, in fact, provided by a library.
    if(@Inotify_LIBRARIES@)
        find_dependency(Inotify)
    endif()

    if(@Procstat_FOUND@)
        find_dependency(Procstat)
    endif()

    if(@HAVE_QTDBUS@)
        find_dependency(Qt6DBus @REQUIRED_QT_VERSION@)
    endif()

    if (@UDev_FOUND@)
        find_dependency(UDev)
    endif()
endif()

@PACKAGE_SETUP_AUTOMOC_VARIABLES@

include("${CMAKE_CURRENT_LIST_DIR}/KF6CoreAddonsTargets.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/KF6CoreAddonsMacros.cmake")
